/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package downtimeapp;

import java.awt.Container;
import java.util.ArrayList;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;

/**
 *
 * @author natha_000
 */
public class RoomGUI extends javax.swing.JPanel {

    /**
     * Creates new form RoomGUItemp
     */
    
    Room room;
    Player character;
    buildinggui parentbuild;
    
    public RoomGUI(Room newroom, Player play, buildinggui pb) {
        room = newroom;
        character = play;
        parentbuild = pb;
        initComponents();
        
    }
    
    public void updatenumbers(){
        RoomName.setText(room.name);
        GoodsBonus.setText(Integer.toString(room.currentbonus[0]));
        InfluenceBonus.setText(Integer.toString(room.currentbonus[1]));
        LaborBonus.setText(Integer.toString(room.currentbonus[2]));
        MagicBonus.setText(Integer.toString(room.currentbonus[3]));
        GoldBonus.setText(Integer.toString(room.currentbonus[4]));
        if(!room.built){
            int progress = ((character.day-room.daystarted)*100/room.createtime);
            BuildProgress.setValue(progress);
            BuildProgress.setStringPainted(true);
        }
        parentbuild.updatebuildnumbers();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        RoomName = new javax.swing.JLabel();
        upGoods = new javax.swing.JButton();
        GoodsBonus = new javax.swing.JTextField();
        downGoods = new javax.swing.JButton();
        downInfluence = new javax.swing.JButton();
        InfluenceBonus = new javax.swing.JTextField();
        upInfluence = new javax.swing.JButton();
        downLabor = new javax.swing.JButton();
        LaborBonus = new javax.swing.JTextField();
        upLabor = new javax.swing.JButton();
        downMagic = new javax.swing.JButton();
        MagicBonus = new javax.swing.JTextField();
        upMagic = new javax.swing.JButton();
        GoldBonus = new javax.swing.JTextField();
        BuildProgress = new javax.swing.JProgressBar();
        Upgradebutton = new javax.swing.JButton();

        RoomName.setText("Room Name");

        upGoods.setText("+");
        upGoods.setVisible(room.earnsgoods);
        upGoods.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upGoodsActionPerformed(evt);
            }
        });

        GoodsBonus.setEditable(false);
        GoodsBonus.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        GoodsBonus.setText("0");

        downGoods.setText("-");
        downGoods.setVisible(room.earnsgoods);
        downGoods.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downGoodsActionPerformed(evt);
            }
        });

        downInfluence.setText("-");
        downInfluence.setVisible(room.earnsinfluence);
        downInfluence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downInfluenceActionPerformed(evt);
            }
        });

        InfluenceBonus.setEditable(false);
        InfluenceBonus.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        InfluenceBonus.setText("0");

        upInfluence.setText("+");
        upInfluence.setVisible(room.earnsinfluence);
        upInfluence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upInfluenceActionPerformed(evt);
            }
        });

        downLabor.setText("-");
        downLabor.setVisible(room.earnslabor);
        downLabor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downLaborActionPerformed(evt);
            }
        });

        LaborBonus.setEditable(false);
        LaborBonus.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        LaborBonus.setText("0");

        upLabor.setText("+");
        upLabor.setVisible(room.earnslabor);
        upLabor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upLaborActionPerformed(evt);
            }
        });

        downMagic.setText("-");
        downMagic.setVisible(room.earnsmagic);
        downMagic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downMagicActionPerformed(evt);
            }
        });

        MagicBonus.setEditable(false);
        MagicBonus.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        MagicBonus.setText("0");

        upMagic.setText("+");
        upMagic.setVisible(room.earnsmagic);
        upMagic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upMagicActionPerformed(evt);
            }
        });

        GoldBonus.setEditable(false);
        GoldBonus.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        GoldBonus.setText("0");

        Upgradebutton.setText("Upgrades");
        Upgradebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpgradebuttonActionPerformed(evt);
            }
        });

        if(room.built){
            BuildProgress.setVisible(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(RoomName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GoodsBonus, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(upGoods)
                    .addComponent(downGoods, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(upInfluence)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(upLabor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(upMagic)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                                .addComponent(Upgradebutton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(InfluenceBonus, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LaborBonus, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MagicBonus, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(GoldBonus, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BuildProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                        .addGap(13, 13, 13))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(downInfluence, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(downLabor, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(downMagic, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(upGoods, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(upInfluence)
                                .addComponent(upLabor)
                                .addComponent(upMagic)
                                .addComponent(Upgradebutton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(GoodsBonus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(InfluenceBonus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(LaborBonus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(MagicBonus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(GoldBonus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(BuildProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(RoomName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(downGoods)
                    .addComponent(downInfluence)
                    .addComponent(downLabor)
                    .addComponent(downMagic))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void upGoodsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upGoodsActionPerformed
        // TODO add your handling code here:
        room.incrementBonus("Goods");
        updatenumbers();
    }//GEN-LAST:event_upGoodsActionPerformed

    private void upInfluenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upInfluenceActionPerformed
        // TODO add your handling code here:
        room.incrementBonus("Influence");
        updatenumbers();
    }//GEN-LAST:event_upInfluenceActionPerformed

    private void upLaborActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upLaborActionPerformed
        // TODO add your handling code here:
        room.incrementBonus("Labor");
        updatenumbers();
    }//GEN-LAST:event_upLaborActionPerformed

    private void upMagicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upMagicActionPerformed
        // TODO add your handling code here:
        room.incrementBonus("Magic");
        updatenumbers();
    }//GEN-LAST:event_upMagicActionPerformed

    private void downGoodsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downGoodsActionPerformed
        // TODO add your handling code here:
        room.decrementBonus("Goods");
        updatenumbers();
    }//GEN-LAST:event_downGoodsActionPerformed

    private void downInfluenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downInfluenceActionPerformed
        // TODO add your handling code here:
        room.decrementBonus("Influence");
        updatenumbers();
    }//GEN-LAST:event_downInfluenceActionPerformed

    private void downLaborActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downLaborActionPerformed
        // TODO add your handling code here:
        room.decrementBonus("Labor");
        updatenumbers();
    }//GEN-LAST:event_downLaborActionPerformed

    private void downMagicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downMagicActionPerformed
        // TODO add your handling code here:
        room.decrementBonus("Magic");
        updatenumbers();
    }//GEN-LAST:event_downMagicActionPerformed

    private void UpgradebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpgradebuttonActionPerformed
        // TODO add your handling code here:
        ArrayList<String> templist = new ArrayList<>();
        ArrayList<Room> dblist = new ArrayList<>();
        if(parentbuild.isbuilding){
            dblist = character.db.roomstats;
        }else{
            dblist = character.db.teamstats;
        }
        for(Room dbroom: dblist){
            for(String name: dbroom.upgradefrom){
                if(name.equals(room.name))
                    templist.add(name);
            }
        }
        for(String name: room.upgradeto){
            if(!templist.contains(name))
                templist.add(name);
        }
        CustomListRenderer render = new CustomListRenderer();
        String[] upgrades = (String[]) templist.toArray();
        JList list = new JList(upgrades);
        list.setCellRenderer(render);
        String custtext;
        if(parentbuild.isbuilding){
            custtext = "Room";
        }else{
            custtext = "Team";
        }
        JComponent[] inputs = new JComponent[]{
            new JLabel("Select a "+custtext+" to upgrade this "+custtext+" to."), list
        };
        JOptionPane.showMessageDialog(null, inputs, "Upgrading "+custtext, JOptionPane.YES_NO_OPTION, null);
        
        String selected = (String) list.getSelectedValue();
        character.upgradeRoom(parentbuild.building, room, selected, parentbuild.isbuilding);
    }//GEN-LAST:event_UpgradebuttonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar BuildProgress;
    private javax.swing.JTextField GoldBonus;
    private javax.swing.JTextField GoodsBonus;
    private javax.swing.JTextField InfluenceBonus;
    private javax.swing.JTextField LaborBonus;
    private javax.swing.JTextField MagicBonus;
    private javax.swing.JLabel RoomName;
    private javax.swing.JButton Upgradebutton;
    private javax.swing.JButton downGoods;
    private javax.swing.JButton downInfluence;
    private javax.swing.JButton downLabor;
    private javax.swing.JButton downMagic;
    private javax.swing.JButton upGoods;
    private javax.swing.JButton upInfluence;
    private javax.swing.JButton upLabor;
    private javax.swing.JButton upMagic;
    // End of variables declaration//GEN-END:variables
}
