/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package downtimeapp;

import java.util.ArrayList;
import javax.swing.BoxLayout;
import static javax.swing.BoxLayout.Y_AXIS;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.YES_NO_OPTION;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

/**
 *
 * @author natha_000
 */
public class buildinggui extends javax.swing.JPanel {

    /**
     * Creates new form buildinggui
     */
    Player owner;
    Building building;
    boolean isbuilding;
    
    public buildinggui(Building build, Player character, boolean isbuild) {
        initComponents();
        building = build;
        owner = character;
        isbuilding = isbuild;
        if(isbuild){
            NewRoomButton.setText("Add Room");
        }else{
            NewRoomButton.setText("Add Team");
        }
        updateRooms();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BuildName = new javax.swing.JLabel();
        NewRoomButton = new javax.swing.JButton();
        GoodsText = new javax.swing.JTextField();
        InfluenceText = new javax.swing.JTextField();
        LaborText = new javax.swing.JTextField();
        MagicText = new javax.swing.JTextField();
        GoldText = new javax.swing.JTextField();
        RoomPanel = new javax.swing.JPanel();
        RoomPane = new javax.swing.JScrollPane();

        setPreferredSize(new java.awt.Dimension(500, 500));

        BuildName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BuildName.setText("Building Name");

        NewRoomButton.setText("New Room");
        NewRoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_pressed(evt);
            }
        });

        GoodsText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        GoodsText.setText("0");
        GoodsText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoodsTextActionPerformed(evt);
            }
        });

        InfluenceText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        InfluenceText.setText("0");
        InfluenceText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InfluenceTextActionPerformed(evt);
            }
        });

        LaborText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        LaborText.setText("0");
        LaborText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LaborTextActionPerformed(evt);
            }
        });

        MagicText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        MagicText.setText("0");
        MagicText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MagicTextActionPerformed(evt);
            }
        });

        GoldText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        GoldText.setText("0");
        GoldText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoldTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RoomPanelLayout = new javax.swing.GroupLayout(RoomPanel);
        RoomPanel.setLayout(RoomPanelLayout);
        RoomPanelLayout.setHorizontalGroup(
            RoomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RoomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(RoomPane)
                .addContainerGap())
        );
        RoomPanelLayout.setVerticalGroup(
            RoomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(RoomPane, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BuildName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GoodsText, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(InfluenceText, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LaborText, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MagicText, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GoldText, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                        .addGap(50, 50, 50)
                        .addComponent(NewRoomButton))
                    .addComponent(RoomPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BuildName)
                    .addComponent(NewRoomButton)
                    .addComponent(GoodsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(InfluenceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LaborText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MagicText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GoldText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RoomPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void GoodsTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoodsTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GoodsTextActionPerformed

    private void InfluenceTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InfluenceTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InfluenceTextActionPerformed

    private void LaborTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LaborTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LaborTextActionPerformed

    private void MagicTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MagicTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MagicTextActionPerformed

    private void GoldTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoldTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GoldTextActionPerformed

    private void button_pressed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_pressed
        ArrayList<Room> buildable = owner.canBuild(isbuilding);
        CustomListRenderer render = new CustomListRenderer();
        JList list = new JList(buildable.toArray());
        list.setCellRenderer(render);
        String custtext;
        if(isbuilding){
            custtext = "Room";
        }else{
            custtext = "Team";
        }
        JComponent[] inputs = new JComponent[]{
            new JLabel("Select a "+custtext+" to build."), list
        };
        JOptionPane.showMessageDialog(null, inputs, "Adding "+custtext+" to Building", JOptionPane.YES_NO_OPTION, null);
        
        Room tomake = (Room) list.getSelectedValue();
        if(tomake != null)
            owner.buildRoom(building, tomake.name, isbuilding);
        updateRooms();
    }//GEN-LAST:event_button_pressed

    void updatebuildnumbers(){
        BuildName.setText(building.name);
        building.setBonus();
        GoodsText.setText(Integer.toString(building.bonuses[0]));
        InfluenceText.setText(Integer.toString(building.bonuses[1]));
        LaborText.setText(Integer.toString(building.bonuses[2]));
        MagicText.setText(Integer.toString(building.bonuses[3]));
        GoldText.setText(Integer.toString(building.bonuses[4]));
    }
    
    private void updateRooms(){
        JPanel temppane = new JPanel();
        temppane.setLayout(new BoxLayout(temppane, Y_AXIS));
        for(int i = 0; i < building.rooms.size(); i++){
            Room temproom = building.rooms.get(i);
            RoomGUI temp = new RoomGUI(temproom, owner, this);
            temp.updatenumbers();
            temp.setVisible(true);
            temppane.add(temp);
        }
        JScrollPane tempscroll = new JScrollPane(temppane);
        tempscroll.setVisible(true);
        RoomPanel.removeAll();
        RoomPanel.setLayout(new BoxLayout(RoomPanel, Y_AXIS));
        RoomPanel.add(tempscroll);
        RoomPanel.revalidate();
        this.repaint();
        updatebuildnumbers();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BuildName;
    private javax.swing.JTextField GoldText;
    private javax.swing.JTextField GoodsText;
    private javax.swing.JTextField InfluenceText;
    private javax.swing.JTextField LaborText;
    private javax.swing.JTextField MagicText;
    private javax.swing.JButton NewRoomButton;
    private javax.swing.JScrollPane RoomPane;
    private javax.swing.JPanel RoomPanel;
    // End of variables declaration//GEN-END:variables
}
