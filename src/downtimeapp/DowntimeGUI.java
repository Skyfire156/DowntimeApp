package downtimeapp;

import java.awt.Cursor;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.BoxLayout;
import static javax.swing.BoxLayout.Y_AXIS;
import javax.swing.JCheckBox;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.JTextPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author natha_000
 */
public class DowntimeGUI extends javax.swing.JFrame {

    /**
     * Creates new form DowntimeGUI
     */
    public Player character;
    private Downtimeapp downtime;
    
    public DowntimeGUI(Player play, Downtimeapp down) {
        initComponents();
        character = play;
        downtime = down;
        PlayerActionPick.setModel(new javax.swing.DefaultComboBoxModel(character.getPossibleActs()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        PlayerName = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        PlayerGoldDisp = new javax.swing.JTextPane();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        StoredGoldDisp = new javax.swing.JTextPane();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        GoodsDisp = new javax.swing.JTextPane();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        InfluenceDisp = new javax.swing.JTextPane();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        LaborDisp = new javax.swing.JTextPane();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        MagicDisp = new javax.swing.JTextPane();
        AddGoldButton = new javax.swing.JButton();
        BuyCapitalButton = new javax.swing.JButton();
        StoreGoldButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        TotalValueLabel = new javax.swing.JTextPane();
        jScrollPane8 = new javax.swing.JScrollPane();
        CurrentDayLabel = new javax.swing.JTextPane();
        DowntimePurchases = new javax.swing.JTabbedPane();
        BuildingsPanel = new javax.swing.JPanel();
        OrgsPanel = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        NewBuildButton = new javax.swing.JButton();
        NewOrgButton = new javax.swing.JButton();
        PlayerActionPick = new javax.swing.JComboBox();
        AddDayButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        GoldEarned = new javax.swing.JTextField();
        GoodsEarned = new javax.swing.JTextField();
        InfluenceEarned = new javax.swing.JTextField();
        LaborEarned = new javax.swing.JTextField();
        MagicEarned = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                formComponentAdded(evt);
            }
        });
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                formFocusLost(evt);
            }
        });
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        PlayerName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PlayerName.setText("Player Name");

        PlayerGoldDisp.setEditable(false);
        PlayerGoldDisp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jScrollPane1.setViewportView(PlayerGoldDisp);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Player Gold");

        StoredGoldDisp.setEditable(false);
        StoredGoldDisp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jScrollPane2.setViewportView(StoredGoldDisp);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Stored Gold");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Goods");

        GoodsDisp.setEditable(false);
        GoodsDisp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jScrollPane3.setViewportView(GoodsDisp);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Influence");

        InfluenceDisp.setEditable(false);
        InfluenceDisp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jScrollPane4.setViewportView(InfluenceDisp);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Labor");

        LaborDisp.setEditable(false);
        LaborDisp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jScrollPane5.setViewportView(LaborDisp);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setLabelFor(MagicDisp);
        jLabel7.setText("Magic");

        MagicDisp.setEditable(false);
        MagicDisp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jScrollPane6.setViewportView(MagicDisp);

        AddGoldButton.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        AddGoldButton.setText("+/-");
        AddGoldButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddGoldButtonActionPerformed(evt);
            }
        });

        BuyCapitalButton.setText("Purchase Capital");
        BuyCapitalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuyCapitalButtonActionPerformed(evt);
            }
        });

        StoreGoldButton.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        StoreGoldButton.setText("+/-");
        StoreGoldButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StoreGoldButtonActionPerformed(evt);
            }
        });

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Total Value of Assets");

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Current Day");

        TotalValueLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jScrollPane7.setViewportView(TotalValueLabel);

        CurrentDayLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jScrollPane8.setViewportView(CurrentDayLabel);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(PlayerName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane4))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(StoreGoldButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(AddGoldButton)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(BuyCapitalButton))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel2, jLabel3});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel13, jLabel14, jLabel4, jLabel5, jLabel6, jLabel7, jScrollPane5, jScrollPane6, jScrollPane7, jScrollPane8});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(PlayerName)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(AddGoldButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(StoreGoldButton))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BuyCapitalButton)
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel13, jLabel14, jLabel2, jLabel3, jLabel4, jLabel5, jLabel6, jLabel7, jScrollPane1, jScrollPane2, jScrollPane3, jScrollPane4, jScrollPane5, jScrollPane6, jScrollPane7, jScrollPane8});

        DowntimePurchases.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        BuildingsPanel.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                BuildingsPanelComponentAdded(evt);
            }
        });

        javax.swing.GroupLayout BuildingsPanelLayout = new javax.swing.GroupLayout(BuildingsPanel);
        BuildingsPanel.setLayout(BuildingsPanelLayout);
        BuildingsPanelLayout.setHorizontalGroup(
            BuildingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        BuildingsPanelLayout.setVerticalGroup(
            BuildingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 173, Short.MAX_VALUE)
        );

        DowntimePurchases.addTab("Buildings", BuildingsPanel);

        javax.swing.GroupLayout OrgsPanelLayout = new javax.swing.GroupLayout(OrgsPanel);
        OrgsPanel.setLayout(OrgsPanelLayout);
        OrgsPanelLayout.setHorizontalGroup(
            OrgsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        OrgsPanelLayout.setVerticalGroup(
            OrgsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 173, Short.MAX_VALUE)
        );

        DowntimePurchases.addTab("Organizations", OrgsPanel);

        jToolBar1.setRollover(true);

        NewBuildButton.setText("New Building");
        NewBuildButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        NewBuildButton.setFocusable(false);
        NewBuildButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        NewBuildButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        NewBuildButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewBuildButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(NewBuildButton);

        NewOrgButton.setText("New Organization");
        NewOrgButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        NewOrgButton.setFocusable(false);
        NewOrgButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        NewOrgButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        NewOrgButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewOrgButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(NewOrgButton);
        jToolBar1.add(PlayerActionPick);

        AddDayButton.setText("Advance Day");
        AddDayButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        AddDayButton.setFocusable(false);
        AddDayButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        AddDayButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        AddDayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddDayButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(AddDayButton);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setLabelFor(jPanel4);
        jLabel1.setText("Estimated Earnings for the day:");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        GoldEarned.setEditable(false);
        GoldEarned.setBackground(new java.awt.Color(255, 255, 255));
        GoldEarned.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoldEarnedActionPerformed(evt);
            }
        });

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Gold");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Goods");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Influence");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Labor");

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Magic");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(GoldEarned, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GoodsEarned, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(InfluenceEarned, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LaborEarned, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MagicEarned, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {GoldEarned, GoodsEarned, InfluenceEarned, LaborEarned, MagicEarned, jLabel10, jLabel11, jLabel12, jLabel8, jLabel9});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GoldEarned, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GoodsEarned, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(InfluenceEarned, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LaborEarned, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MagicEarned, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {GoldEarned, GoodsEarned, InfluenceEarned, LaborEarned, MagicEarned, jLabel10, jLabel11, jLabel12, jLabel8, jLabel9});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DowntimePurchases, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DowntimePurchases)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddDayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddDayButtonActionPerformed
        // TODO add your handling code here:
        Object selectAct = PlayerActionPick.getSelectedItem();
        String actstring = selectAct.toString();
        int[] preearned = new int[]{0,0,0,0,0};
        switch(actstring){
            case "Earn Capital":
                preearned = EarnCapitalAct();
                break;
            case "Promote Business":
                preearned = PromoteBusinessAct();
                break;
            case "Run Business":
                preearned = RunBusinessAct();
                break;
            default: 
                System.out.println(actstring);
                break;
        }
        character.advanceDay(actstring, preearned);
        updateGUI();
        downtime.saveData(character);
    }//GEN-LAST:event_AddDayButtonActionPerformed

    public int[] EarnCapitalAct(){
        int[] retval = new int[5];
        Building falseval = new Building(character.db);
        falseval.canearn = new boolean[]{true,true,true,true,true};
        boolean[] captype = selectCapital(falseval);
        int modifier = selectSkill();
        for(int i = 0; i<5; i++){
            if(captype[i]){
                if(i != 4){
                    retval[i] = modifier/10;
                }else{
                    retval[i] = modifier;
                }
            }
        }
        return retval;
    }
    
    public int[] PromoteBusinessAct(){
        CustomListRenderer render = new CustomListRenderer();
        JList list = new JList(character.buildings.toArray());
        list.setCellRenderer(render);
        JTextField goodnum = new JTextField("0");
        JTextField infnum = new JTextField("0");
        JTextField labornum = new JTextField("0");
        JTextField magicnum = new JTextField("0");
        JComponent[] inputs = new JComponent[]{
            new JLabel("Select a building to promote"), list,
            new JLabel("Amount of Capital to give out as part of promotion."),
            new JLabel("Goods"), goodnum,
            new JLabel("Influence"), infnum,
            new JLabel("Labor"), labornum,
            new JLabel("Magic"), magicnum,
            
        };
        JOptionPane.showMessageDialog(null, inputs, "Promoting A Building", JOptionPane.YES_NO_OPTION, null);
        Building selected = (Building) list.getSelectedValue();
        boolean[] captype = selectCapital(selected);
        int modifier = selectSkill();
        int goodspent = Integer.parseInt(goodnum.getText());
        int infspent = Integer.parseInt(infnum.getText());
        int laborspent = Integer.parseInt(labornum.getText());
        int magicspent = Integer.parseInt(magicnum.getText());
        modifier += (goodspent*5);
        character.Goods -= goodspent;
        modifier += (infspent*5);
        character.Influence -= infspent;
        modifier += (laborspent*5);
        character.Labor -= laborspent;
        modifier += (magicspent*5);
        character.Magic -= magicspent;
        
        int[] retvals = new int[]{0,0,0,0,0};
        for(int i = 0; i<5; i++){
            if(captype[i]){
                if(i != 4){
                    retvals[i] = modifier/10;
                }else{
                    retvals[i] = modifier;
                }
            }
        }
        return retvals;
    }
    
    public int[] RunBusinessAct(){
        int[] retval = new int[5];
        CustomListRenderer render = new CustomListRenderer();
        JList list = new JList(character.buildings.toArray());
        list.setCellRenderer(render);
        JComponent[] inputs = new JComponent[]{
            new JLabel("Select a building to run"), list
        };
        JOptionPane.showMessageDialog(null, inputs, "Running A Business", JOptionPane.YES_NO_OPTION, null);
        Building selected = (Building) list.getSelectedValue();
        boolean[] captype = selectCapital(selected);
        int modifier = selectSkill();
        modifier += 10;
        for(int i = 0; i<5; i++){
            if(captype[i]){
                if(i != 4){
                    retval[i] = modifier/10;
                }else{
                    retval[i] = modifier;
                }
            }
        }
        return retval;
    }
    
    public boolean[] selectCapital(Building building){
        CustomListRenderer render = new CustomListRenderer();
        String[] types = new String[5];
        if(building.canearn[0])
            types[0] = "Goods";
        if(building.canearn[1])
            types[1] = "Influence";
        if(building.canearn[2])
            types[2] = "Labor";
        if(building.canearn[3])
            types[3] = "Magic";
        types[4] = "Gold";
        JList list = new JList(types);
        list.setCellRenderer(render);
        JComponent[] inputs = new JComponent[]{
            new JLabel("Select a type of capital to gain"), list
        };
        JOptionPane.showMessageDialog(null, inputs, "Type of Capital", JOptionPane.YES_NO_OPTION, null);
        boolean[] retvals = new boolean[]{false,false,false,false,false};
        String selectedcap = (String) list.getSelectedValue();
        if(selectedcap.equals("Goods"))
            retvals[0] = true;
        if(selectedcap.equals("Influence"))
            retvals[1] = true;
        if(selectedcap.equals("Labor"))
            retvals[2] = true;
        if(selectedcap.equals("Magic"))
            retvals[3] = true;
        if(selectedcap.equals("Gold"))
            retvals[4] = true;
        return retvals;
    }
    
    public int selectSkill(){
        JTextField modifier = new JTextField();
        JComponent[] inputs = new JComponent[]{
            new JLabel("Enter your skill bonus for the skill being used."), modifier
        };
        JOptionPane.showMessageDialog(null, inputs, "Skill Modifier", JOptionPane.YES_NO_OPTION, null);
        int retval;
        retval = Integer.parseInt(modifier.getText());
        retval +=10;
        return retval;
    }
    
    private void NewOrgButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewOrgButtonActionPerformed
        // TODO add your handling code here:
        JTextField buildname = new JTextField();
        
        JComponent[] inputs = new JComponent[]{
            new JLabel("Name for new Organization:"),buildname
        };
        JOptionPane.showMessageDialog(null, inputs, "Creating New Organization" , JOptionPane.PLAIN_MESSAGE);
        
        character.addOrganization(buildname.getText());
        addBuilding(false);
        updateGUI();
        downtime.saveData(character);
    }//GEN-LAST:event_NewOrgButtonActionPerformed

    private void GoldEarnedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoldEarnedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GoldEarnedActionPerformed

    private void BuyCapitalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuyCapitalButtonActionPerformed
        JTextField goods = new JTextField("0");
        JTextField influence = new JTextField("0");
        JTextField labor = new JTextField("0");
        JTextField magic = new JTextField("0");
        
        JComponent[] inputs = new JComponent[]{
            new JLabel("Amount to buy:"), new JLabel("Goods"),goods,
            new JLabel("Influence"), influence,
            new JLabel("Labor"), labor,
            new JLabel("Magic"), magic
        };
        JOptionPane.showMessageDialog(null, inputs, "Buying Capital with Player money" , JOptionPane.PLAIN_MESSAGE);
        int tempgood = Integer.parseInt(goods.getText());
        int tempinf = Integer.parseInt(influence.getText());
        int templab = Integer.parseInt(labor.getText());
        int tempmag = Integer.parseInt(magic.getText());
        if(character.gp>=(tempgood*20)){
            character.gp -= (tempgood*20);
            character.Goods += tempgood;
        }
        if(character.gp>=(tempinf*30)){
            character.gp -= (tempinf*30);
            character.Influence += tempinf;
        }
        if(character.gp>=(templab*20)){
            character.gp -= (templab*20);
            character.Labor += templab;
        }
        if(character.gp>=(tempmag*100)){
            character.gp -= (tempmag*100);
            character.Magic += tempmag;
        }
        updateGUI();
        downtime.saveData(character);
    }//GEN-LAST:event_BuyCapitalButtonActionPerformed

    private void AddGoldButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddGoldButtonActionPerformed
        JTextField amount = new JTextField("0");
        JCheckBox remove = new JCheckBox("Removing Gold?");
        
        JComponent[] inputs = new JComponent[]{
            new JLabel("Amount"),amount, remove
        };
        JOptionPane.showMessageDialog(null, inputs, "Add/Remove Player Gold" , JOptionPane.PLAIN_MESSAGE);
        double tempnum = Double.parseDouble(amount.getText());
        if(remove.isSelected()){
            if(character.gp >= tempnum){
                character.gp -= tempnum;
            }else{
                JOptionPane.showMessageDialog(null, new JLabel("Cannot remove that much!"), "Error!", JOptionPane.OK_OPTION);
            }
            
        }else{
            character.gp += tempnum;
        }
        updateGUI();
        downtime.saveData(character);
    }//GEN-LAST:event_AddGoldButtonActionPerformed

    private void NewBuildButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewBuildButtonActionPerformed
        JTextField buildname = new JTextField();
        
        JComponent[] inputs = new JComponent[]{
            new JLabel("Name for new building:"),buildname
        };
        JOptionPane.showMessageDialog(null, inputs, "Creating New Building" , JOptionPane.PLAIN_MESSAGE);
        
        character.addBuilding(buildname.getText());
        addBuilding(true);
        updateGUI();
    }//GEN-LAST:event_NewBuildButtonActionPerformed

    private void formComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_formComponentAdded
        // TODO add your handling code here:
        updateGUI();
    }//GEN-LAST:event_formComponentAdded

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
        updateGUI();
    }//GEN-LAST:event_formFocusGained

    private void formFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusLost
        // TODO add your handling code here:
        updateGUI();
    }//GEN-LAST:event_formFocusLost

    private void BuildingsPanelComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_BuildingsPanelComponentAdded
        // TODO add your handling code here:
        updateGUI();
    }//GEN-LAST:event_BuildingsPanelComponentAdded

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        updateGUI();
    }//GEN-LAST:event_formWindowGainedFocus

    private void StoreGoldButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StoreGoldButtonActionPerformed
        JTextField amount = new JTextField("0");
        JCheckBox stored = new JCheckBox("Withdrawing?");
        JComponent[] inputs = new JComponent[]{
            new JLabel("Amount to Deposit/Withdraw"),amount, stored
        };
        JOptionPane.showMessageDialog(null, inputs, "Deposit/Withdraw Stored Gold" , JOptionPane.PLAIN_MESSAGE);
        double tempnum = Double.parseDouble(amount.getText());
        if(stored.isSelected()){
            if(character.storedgp >= tempnum){
                character.gp += tempnum;
                character.storedgp -= tempnum;
            }else{
                JOptionPane.showMessageDialog(null, new JLabel("Cannot withdraw that much!"), "Error!", JOptionPane.OK_OPTION);
            }
        }else{
            if(character.gp >= tempnum){
                character.gp -= tempnum;
                character.storedgp += tempnum;
            }else{
                JOptionPane.showMessageDialog(null, new JLabel("Cannot deposit that much!"), "Error!", JOptionPane.OK_OPTION);
            }
        }
        updateGUI();
        downtime.saveData(character);
    }//GEN-LAST:event_StoreGoldButtonActionPerformed

    public void addBuilding(boolean isbuilding){
        JPanel temppane = new JPanel();
        temppane.setLayout(new BoxLayout(temppane, Y_AXIS));
        ArrayList<Building> worklist;
        int compnum;
        if(isbuilding){
            worklist = character.buildings;
            compnum = 0;
        }else{
            worklist = character.orgs;
            compnum = 1;
        }
        for(int i = 0; i < worklist.size(); i++){
            Building tempbuild = worklist.get(i);
            BuildingBox temp = new BuildingBox(tempbuild, character, isbuilding);
            temp.setVisible(true);
            temp.updatebuildbox();
            temppane.add(temp);
        }
        JScrollPane tempscroll = new JScrollPane(temppane);
        DowntimePurchases.setComponentAt(compnum, tempscroll);
        DowntimePurchases.repaint();
        updateGUI();
        downtime.saveData(character);
    }
    
    public int assetTotals(){
        int retval = 0;
        for(Building build: character.buildings){
            retval += build.getValue();
        }
        for(Building build: character.orgs){
            retval += build.getValue();
        }
        retval += character.gp;
        retval += character.storedgp;
        retval += (character.Goods*20);
        retval += (character.Influence*30);
        retval += (character.Labor*20);
        retval += (character.Magic*100);
        return retval;
    }
    
    public void updateGUI(){
        String goldtext;
        goldtext = String.format("%.2f", character.storedgp);
        PlayerGoldDisp.setText(Double.toString(character.gp));
        StoredGoldDisp.setText(goldtext);
        GoodsDisp.setText(Integer.toString(character.Goods));
        InfluenceDisp.setText(Integer.toString(character.Influence));
        LaborDisp.setText(Integer.toString(character.Labor));
        MagicDisp.setText(Integer.toString(character.Magic));
        CurrentDayLabel.setText(Integer.toString(character.day));
        TotalValueLabel.setText(Integer.toString(assetTotals()));
        int[] tempB = character.calcEarnings(new int[5]);
        double tempgold = (double)tempB[4]/10;
        GoldEarned.setText(Double.toString(tempgold));
        GoodsEarned.setText(Integer.toString(tempB[0]));
        InfluenceEarned.setText(Integer.toString(tempB[1]));
        LaborEarned.setText(Integer.toString(tempB[2]));
        MagicEarned.setText(Integer.toString(tempB[3]));
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DowntimeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DowntimeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DowntimeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DowntimeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddDayButton;
    private javax.swing.JButton AddGoldButton;
    public javax.swing.JPanel BuildingsPanel;
    private javax.swing.JButton BuyCapitalButton;
    private javax.swing.JTextPane CurrentDayLabel;
    private javax.swing.JTabbedPane DowntimePurchases;
    private javax.swing.JTextField GoldEarned;
    private javax.swing.JTextPane GoodsDisp;
    private javax.swing.JTextField GoodsEarned;
    private javax.swing.JTextPane InfluenceDisp;
    private javax.swing.JTextField InfluenceEarned;
    private javax.swing.JTextPane LaborDisp;
    private javax.swing.JTextField LaborEarned;
    private javax.swing.JTextPane MagicDisp;
    private javax.swing.JTextField MagicEarned;
    private javax.swing.JButton NewBuildButton;
    private javax.swing.JButton NewOrgButton;
    private javax.swing.JPanel OrgsPanel;
    private javax.swing.JComboBox PlayerActionPick;
    private javax.swing.JTextPane PlayerGoldDisp;
    private javax.swing.JLabel PlayerName;
    private javax.swing.JButton StoreGoldButton;
    private javax.swing.JTextPane StoredGoldDisp;
    private javax.swing.JTextPane TotalValueLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
